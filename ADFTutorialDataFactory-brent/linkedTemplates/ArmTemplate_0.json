{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFTutorialDataFactory-brent"
		},
		"ADLSGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSGen2'"
		},
		"measadvtestftp_privateKeyContent": {
			"type": "secureString",
			"metadata": "Secure string for 'privateKeyContent' of 'measadvtestftp'"
		},
		"measadvtestftp_passPhrase": {
			"type": "secureString",
			"metadata": "Secure string for 'passPhrase' of 'measadvtestftp'"
		},
		"ADLSGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://measadvtestftp.dfs.core.windows.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://MeasAdvKeyVault-dev.vault.azure.net/"
		},
		"measadvtestftp_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "measadvtestftp.blob.core.windows.net"
		},
		"measadvtestftp_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "measadvtestftp.measadvftpuser01"
		},
		"AzureSqlDatabase1_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SQL-CONNECTION-STRING-904ab117-ffda-46e9-aabd-869b63daaafa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/measadvtestftp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('measadvtestftp_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "SshPublicKey",
					"userName": "[parameters('measadvtestftp_properties_typeProperties_userName')]",
					"privateKeyContent": {
						"type": "SecureString",
						"value": "[parameters('measadvtestftp_privateKeyContent')]"
					},
					"passPhrase": {
						"type": "SecureString",
						"value": "[parameters('measadvtestftp_passPhrase')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "moviesDB.csv",
						"fileSystem": "sample-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "sample-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2pj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "measadvtestftp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "learningLabFileImport.xml"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/measadvtestftp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureSqlDatabase1_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_2pj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "rowSequence",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "objName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "orgName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "localTime",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "timeFormat",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "userName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "editStateName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "unitProfileName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "dqInfoName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "volume",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "energy",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "flowTime",
						"type": "real",
						"precision": 24,
						"scale": 0
					},
					{
						"name": "pressure",
						"type": "real",
						"precision": 24,
						"scale": 0
					},
					{
						"name": "temperature",
						"type": "real",
						"precision": 24,
						"scale": 0
					},
					{
						"name": "rawValue",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "intermediateValue",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "primaryFactor",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "waterVaporFactor",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "volumeAccum",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "energyAccum",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "miscValue",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "time",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "offset",
						"type": "smallint",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "validate",
						"type": "char",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "isSummer",
						"type": "char",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "runTime",
						"type": "real",
						"precision": 24,
						"scale": 0
					},
					{
						"name": "adjustmentCodeName",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "mass",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "Zratio",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "hydrocarbonDewpoint",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "uncorrVolAccum",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "gqId",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "gqTimeReverse",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "gqLastModTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "gqHistoryTypeCode",
						"type": "tinyint",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "rawValueAccum",
						"type": "float",
						"precision": 53,
						"scale": 0
					},
					{
						"name": "hostHourly",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fieldHourly",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "hostDaily",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fieldDaily",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "hostMonthly",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fieldMonthly",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "rdm_ReadingRawHy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformMovies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesDB",
								"type": "DatasetReference"
							},
							"name": "MoviesDB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MoviesSink",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "FilterYears"
						},
						{
							"name": "AggregateComedyRating"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as string,",
						"          title as string,",
						"          genres as string,",
						"          year as string,",
						"          Rating as string,",
						"          {Rotton Tomato} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MoviesDB",
						"MoviesDB filter(toInteger(year) >= 1910 && toInteger(year) <= 2000 && rlike(genres, 'Comedy')) ~> FilterYears",
						"FilterYears aggregate(groupBy(year),",
						"     AverageComedyRating = avg(toInteger(Rating))) ~> AggregateComedyRating",
						"AggregateComedyRating sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesDB')]",
				"[concat(variables('factoryId'), '/datasets/MoviesSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_2pj')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_2pj",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/learningLabFileImport.xml"
							},
							{
								"name": "Destination",
								"value": "dbo.rdm_ReadingRawHy"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['name']"
										},
										"sink": {
											"name": "objName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['organization']"
										},
										"sink": {
											"name": "orgName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['differentialPressure']['value']"
										},
										"sink": {
											"name": "rawValue",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['editState']"
										},
										"sink": {
											"name": "editStateName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['fieldTime']"
										},
										"sink": {
											"name": "localTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['flowTime']['value']"
										},
										"sink": {
											"name": "flowTime",
											"type": "Single"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['runTime']['value']"
										},
										"sink": {
											"name": "runTime",
											"type": "Single"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['scadaDataQuality']"
										},
										"sink": {
											"name": "dqInfoName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['absolutePressure']['value']"
										},
										"sink": {
											"name": "pressure",
											"type": "Single"
										}
									},
									{
										"source": {
											"path": "$['MeasData']['Reading'][0]['temperature']['value']"
										},
										"sink": {
											"name": "temperature",
											"type": "Single"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_2pj",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_2pj",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_2pj')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_2pj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformMovies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransformMovies",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MoviesDB": {},
									"Sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TransformMovies')]"
			]
		}
	]
}